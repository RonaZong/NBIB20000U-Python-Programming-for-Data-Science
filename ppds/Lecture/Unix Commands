# man command gives description of any installed program
man command
man program-name
# Short list of possible parameters
command -help
command --help
command -h
command --h

# Simple typing
filename = preffix + Tab

# Pytest
pytest -vvv # Automatically detect pytest file

# Check commands history
history
Ctrl-r

# Cancel program running
Ctrl-c
# Suspend process
Ctrl-z
bg # send it to th background
fg # send it to the foreground
# Kill process, stop program running
kill PID
# Kill processes
killall
# Clear screen
Ctrl-l
# Close terminal window
Ctrl-d

# Wildcards
# Specify a selection of files
* # Match any character any number of times
? # Match any character once
[] # Match specified character class once
a-z # a to z, small letters
A-Z # A to Z, capital letters
a-Z # all letters, lower and upper case
0-9 # 0 to 9
0-9, a-z # 0 to 9 and a to z

# Log in a remote server
ssh user-name@server-name
ssh tnd179@ssh-diku-ppds.science.ku.dk
ssh ppds-diku

# Run Python
python
# Execute .py file
python filename.py
# Install external modules
pip install package-name
pip install --user package-name
# Uninstall packages
pip uninstall package-name

# Get current directory
pwd
# Navigating the directory
cd directory # Absolute path name
cd .. # Relative path name: parent
cd # cd ~ home directory

# Listing files
ls # List from current directory
ls .. # List from parent (/home)
ls -l # Long format (more details)
ls -a # All files (including files starting with a dot)
ls -F # Append a slash to directory names
ls -d # List directory


# View file
less filename
less "ppds exercise one.txt"

# Create directory
mkdir directory

# Copy file
cp original-filename new-copied-filename
cp original-filename target-directory/
cp -r # Copy directory

# Move / Rename a file
mv original-filename new-filename # Rename
mv original-filename target-directory # Move
mv -r # Move / Copy directory

rm filename
# Remove directory
rm -rf directory
rmdir directory

# Make symbolic links
ln -s original link-file
ln -s /usr/share/dict/british-english words_uk

# Transfer files between systems
# from remote to you
scp user-name@server:remote-path local-path
# from you to remote
scp local-path user-name@server:remote-path
scp /usr/share/dict/british-english tnd179@ssh-diku-ppds.science.ku.dk:
# Transfer directory
scp -r

# Concatenate and output file
cat filename

# Output text
echo "text"
echo $PATH

# Create file
touch filename

# See first n=10 lines of file
head filename
head -n line-number filename
# See last n=10 lines of file
tail filename
tail -n line-number filename

# Count lines, words, characters in a file
wc filename
wc -m # character counts
wc -l # line counts
wc -w # word counts

# Sort the contents of file
sort filename
sort -r filename # Sort in reverse order

# Search a pattern inside one or more files
grep 'pattern' filename
# Search a pattern through all files in a directory and all its subdirectories, recursively
grep -r 'pattern' directories

# Search files by name
find start-directory -name pattern

# Search-replace within files
sed 's/query/replacement/g' filename # s = substitute, g = global
sed -n # suppress automatic printing of pattern space
sed -e # add the script to the commands to be executed
sed -f # add the contents of script-file to the commands to be executed
sed -r # use extended regular expressions in the script
sed -s # consider files as separate rather than as a single continuous long sstram
sed -u # load minimal amounts of date from the input files and flush the output buffers more often
sed -n 's/^-//p'
sed '/^[-!*]/!d'
sed -e 's/> //'
sed -r 's/[0-9]//g'
sed '/^$/d'
# Download online files directly from terminal
wget internet-address
wget https://wouterboomsma.github.io/ppds2021/data/m_scrambled.txt
# Download all online files directly from terminal
wget -r internet-address

# Compress a file
zip name-of-new-zip-file filenames-to-compress
# Compress entire directory
zip -r name-of-new-zip-directory directorynames-to-compress
# Compress a file and replace with gzipped equivalent (.gz)
gzip filenames
# Compress a file and replace with bzip2ec equivalent (.bz2)
bzip2 filenames
# Compress many files
tar cvf name-of-new-file.tar files-or-directories
# Produce tar.gz
gzip name-of-new-file.tar
tar -zcvf name-of-new-file.tar.gz files-or-directories
# Produce tar.nz2
tar -jcvf name-of-new-file.tar.bz2 files-or-directories
# Uncompress and create filename from filename.zip
unzip filename.zip
# Uncompress and replace filename.gz with filename
gunzip filename.gz
# Uncompress and replace filename.bz2 with filename
bunzip2 filename.bz2
# Unpack tar-file
tar -xvf filename.tar
# Uncompress then unpack tar.gz or tar.bz2 files
tar -xvf filename.tar.gz
tar -xvf filename.tar.bz2

# Redirection from a file
# Specify a file as input to a program
command < filename
# Specify a file as output to a program
command > filename
# Append to an existing file
command >> filename
# Pipelines, use the output of one command as input to another command
comand | command

# Redirect output and save a copy to a file
command | tee filename | command
# Extract columns from a file
cut -f column-number -d delimeter filename
# Add line numbers
nl filename
# Replace one set of characters with another
tr "characters-to-replace" "characters-to-replace-with"
# Squeeze multiple repeated occurrences of a character into a single occurrence
tr -s "character"
# Delete a character altogether
tr -d "character"
# Filter out repeated lines
uniq filename
# Show only duplicate lines
uniq -d filename
# Count how many times each line is repeated
uniq -c
# Compare files line by line and check for differences
diff filename1 filename2
diff -q # report only when files differ
diff -s # report when twp files are the same
diff -c -C NUM # output NUM 3 linews of copied context
diff -u -U NUM #output NUM 3 lines of unified context
diff -y # output in two columns
diff
# Quick editing in terminal
nano filename

# Change permission of a file,
# user(u) group(g) other(o) all(a),
# add(+) remove(-) set to(=)
# read(r) write(w) execute(x)
chmod permissions file-or-directory
# Change the group of a file
chgrp new-group file-or-directory
# Change ownership
chown new-user file-or-directory
# Change permission of a directory
chmod -r permissions file-ordirectory
chgrp -r new-group file-or-directory
chown -r new-user file-or-directory

# Allow to superuser privileges
sudo command

# Display only the processes started from the current shell
ps
# Display all processes and who owns them
ps aux
# Display only your own
ps ux

# Interactive overview
top

# Run programs in the background
sleep number &
ps


# Show Calendar
cal
# Show Calendar starts with Monday
cal -m